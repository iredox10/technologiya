---
import MainLayout from '../layouts/MainLayout.astro';
import ArticleCard from '../components/ArticleCard';
import { articleService, categoryService, authorService } from '../lib/appwriteServices';
import type { Article, Category, Author } from '../types';
import { FiTrendingUp } from 'react-icons/fi';

// Fetch articles from Appwrite (get more articles, up to 100)
const articlesResult = await articleService.getArticles(1, 100);
const allArticles = articlesResult.success && articlesResult.data 
  ? (articlesResult.data.documents as unknown as Article[])
  : [];

console.log('üìä Articles fetched:', {
  total: allArticles.length,
  success: articlesResult.success,
  error: articlesResult.success ? null : articlesResult.error
});

// Filter published articles only
const publishedArticles = allArticles.filter(article => article.status === 'published');

console.log('üì∞ Published articles:', publishedArticles.length);

// Get featured articles (featured flag = true)
const rawFeaturedArticles = publishedArticles.filter(article => article.featured).slice(0, 3);

// Get latest articles (sorted by creation date)
const rawLatestArticles = publishedArticles
  .sort((a, b) => new Date(b.$createdAt).getTime() - new Date(a.$createdAt).getTime())
  .slice(0, 6);

// Enrich articles with category and author data
async function enrichArticle(article: Article) {
  const [categoryResult, authorResult] = await Promise.all([
    categoryService.getCategory(article.categoryId),
    authorService.getAuthor(article.authorId)
  ]);
  
  return {
    ...article,
    category: categoryResult.success && categoryResult.data 
      ? categoryResult.data 
      : { name: 'Uncategorized', slug: 'uncategorized' },
    author: authorResult.success && authorResult.data
      ? authorResult.data
      : { name: 'Unknown', avatar: '' },
  };
}

const featuredArticles = await Promise.all(rawFeaturedArticles.map(enrichArticle));
const latestArticles = await Promise.all(rawLatestArticles.map(enrichArticle));

console.log('‚ú® Featured articles:', featuredArticles.length);
console.log('üì∞ Latest articles:', latestArticles.length);

if (featuredArticles.length > 0) {
  console.log('üîç Sample featured article:', {
    title: featuredArticles[0].title,
    hasCategory: !!featuredArticles[0].category,
    hasAuthor: !!featuredArticles[0].author,
    hasCoverImage: !!featuredArticles[0].coverImage,
  });
}

// Fetch categories from Appwrite and calculate article counts
const categoriesResult = await categoryService.getCategories();
let categoriesWithCounts: any[] = [];

if (categoriesResult.success && categoriesResult.data) {
  const cats = categoriesResult.data.documents as unknown as Category[];
  
  // Calculate article count for each category
  categoriesWithCounts = cats.map(cat => {
    const count = publishedArticles.filter(a => a.categoryId === cat.$id).length;
    
    return {
      ...cat,
      articleCount: count
    };
  });
}
---

<MainLayout 
  title="Technologiya - Labaran Fasaha a Hausa"
  description="Samun sabbin labarai game da wayoyi, manhajoji, da dabaru na fasaha a cikin Hausa"
>
  <div class="container mx-auto px-4 py-8">
    
    <!-- Hero Section with Featured Articles -->
    {featuredArticles.length > 0 && (
      <section class="mb-12">
        <div class="flex items-center mb-6">
          <FiTrendingUp className="w-6 h-6 text-blue-600 dark:text-blue-400 mr-2" />
          <h2 class="font-mono text-3xl font-bold text-gray-900 dark:text-gray-100 tracking-tight">
            Labarai Masu Muhimmanci
          </h2>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {featuredArticles.map((article) => (
            <ArticleCard article={article} featured={true} client:visible />
          ))}
        </div>
      </section>
    )}

    <!-- Latest Articles Section -->
    <section class="mb-12">
      <div class="flex items-center justify-between mb-6">
        <h2 class="font-mono text-3xl font-bold text-gray-900 dark:text-gray-100 tracking-tight">
          Sabbin Labarai
        </h2>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {latestArticles.map((article) => (
          <ArticleCard article={article} client:visible />
        ))}
      </div>
    </section>

    <!-- Load More Button -->
    <div class="flex justify-center mt-8">
      <button class="btn-primary font-mono px-8 py-3 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-lg transition-colors duration-300 shadow-md hover:shadow-lg tracking-wide">
        Duba ∆òarin Labarai
      </button>
    </div>

    <!-- Categories Quick Links -->
    <section class="mt-16 py-12 bg-gray-50 dark:bg-gray-800 rounded-xl">
      <div class="text-center mb-8">
        <h2 class="font-mono text-3xl font-bold text-gray-900 dark:text-gray-100 mb-2 tracking-tight">
          Rukunin Labarai
        </h2>
        <p class="text-gray-600 dark:text-gray-400">
          Za…ìi rukunin da kake so
        </p>
      </div>
      
      <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-4 px-6">
        {categoriesWithCounts.slice(0, 5).map((category) => (
          <a 
            href={`/category/${category.slug}`} 
            class="group p-6 bg-white dark:bg-gray-900 rounded-lg text-center hover:shadow-lg transition-all duration-300 hover:scale-105"
          >
            <h3 class="font-bold text-gray-900 dark:text-gray-100 group-hover:text-blue-600 dark:group-hover:text-blue-400 mb-2">
              {category.name}
            </h3>
            <p class="text-xs text-gray-500 dark:text-gray-500">
              {category.articleCount || 0} {category.articleCount === 1 ? 'labari' : 'labarai'}
            </p>
          </a>
        ))}
      </div>
    </section>

  </div>
</MainLayout>
